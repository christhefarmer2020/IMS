@model IMS.ViewModels.CreateVM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<style>
    .myactionlink:hover {
        color: black;
    }

    .myactionlink {
        color: white;
    }

    .myactionlink {
        border: double
    }

    .myactionlink {
        background-color: forestgreen
    }

    .myactionlink {
        padding-left: 5px
    }

    .myactionlink {
        padding-right: 5px
    }

    .myactionlink {
        padding-top: 5px
    }

    .myactionlink {
        padding-bottom: 5px
    }
</style>


@using (Html.BeginForm("Create","EncounterImages", FormMethod.Post, new { enctype="multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Upload Encounter Image(s) and Metadata</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.PAT_MRN_NUM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PAT_MRN_NUM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PAT_MRN_NUM, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Appointment_Time, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Appointment_Time, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Appointment_Time, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Consent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Consent", new List<SelectListItem>
            {
                new SelectListItem { Text = "Present", Value = "Present" },
                new SelectListItem { Text = "Publish", Value = "Publish" }
            }, "Consent Status")

            @Html.ValidationMessageFor(model => model.Consent, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Images, new { type = "file", multiple = "multiple" })
            @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "EncounterImages", new { @class = "myactionlink" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
